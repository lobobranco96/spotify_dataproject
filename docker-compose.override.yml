version: '3'
services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=storage
      - MINIO_REGION_NAME=us-east-1
      - MINIO_REGION=us-east-1
    command: server /data --console-address ":9001"
    volumes:
      - lake_minio_vol:/data
      - ./minio/minio-client:/root/.mc
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:9000/minio/health/live
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - astro_default

  minio-bucket:
    image: minio/mc:latest
    container_name: minio-bucket
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      until mc alias set myminio http://minio:9000 admin password >/dev/null 2>&1; do
        echo 'Aguardando MinIO...';
        sleep 5;
      done;
      echo 'MinIO está pronto. Iniciando configuração dos buckets.';
      mc mb myminio/raw;
      mc mb myminio/processed;
      echo 'Buckets criados com sucesso.';
      mc anonymous set public myminio/raw;
      mc anonymous set public myminio/processed;
      echo 'Políticas de acesso definidas para público.';
      "
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    networks:
      - astro_default

volumes:
  lake_minio_vol:

networks:
  astro_default:
    driver: bridge